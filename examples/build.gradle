apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "ai.olami.android.sample"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 2
        versionName "1.1"

        archivesBaseName = "Hackntu-2017-android-things"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "${archivesBaseName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile project(':olami-android-client-2.0.0')
    compile project(':KeywordDetect-1.0.0-beta')
    compile project(':olami-tts-player-1.0.0-beta')
    compile 'ai.olami:olami-java-client:1.0.0'

    compile group: 'commons-net', name: 'commons-net', version: '3.3'

    testCompile 'junit:junit:4.12'
}

// Copy output files to '/bin' after build --------------
task copyOutputFiles(type: Copy) {
    from 'build/outputs/apk'
    into "../bin"
    include '*.apk'
}

build.finalizedBy(copyOutputFiles)
// ------------------------------------------------------